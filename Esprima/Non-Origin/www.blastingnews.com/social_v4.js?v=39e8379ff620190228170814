/*(function (d, s, id) {
 var js, fjs = d.getElementsByTagName(s)[0];
 if (d.getElementById(id))
 return;
 js = d.createElement(s);
 js.id = id;
 js.src = "//connect.facebook.net/" + window.currentLang + "/sdk.js";
 fjs.parentNode.insertBefore(js, fjs);
 }(document, 'script', 'facebook-jssdk'));*/

//(function () {
//  var po = document.createElement('script');
//  po.type = 'text/javascript';
//  po.async = true;
//  po.src = 'https://apis.google.com/js/client:plusone.js?onload=render';
//  var s = document.getElementsByTagName('script')[0];
//  s.parentNode.insertBefore(po, s);
//})();

//Variabile globale purtroppo necessaria, per il flusso del workaround per chrome
var facebook_redirect = true;
var subscription_channel = 2;
var facebook_login_in_execution = false; 
var facebook_success_ga = false;

//Apre un popup manualmente per far fare login all'utente
function openFBLoginDialogManually() {
  var ABSOLUTE_URI = "http://"+document.domain+"/facebook_redirect_page";
  var redirect_uri = "&redirect_uri=" + ABSOLUTE_URI;
  var scope = "&scope="+blfbsdk_config.config.scope;
  var url = "https://www.facebook.com/dialog/oauth?client_id=" + blfbsdk_config.config.appId + redirect_uri + scope;

  // notice the lack of other param in window.open
  // for some reason the opener is set to null
  // and the opened window can NOT reference it
  // if params are passed. #Chrome iOS Bug
  window.open(url);
}

//Funzione chiamata dal popup aperto qui sopra (window.open)
function fbCompleteLogin() {
  FB.getLoginStatus(handleFacebookLoginResponse, true);
}

/*condividi*/
function click_for_share() {
  var sh = $('#share-news-to').val();
  if (sh != null) {
    $('#' + sh).click();
  }
}

function finalStep(redirect, data){
  if(typeof redirect === "string"){//voglio una redirect alla url contenuta in redirect
    location.href = redirect;
    return;
  }
  var jsonObj = eval(data);
  if (redirect == true && jsonObj.response_data.login.redazione_prefix_url != false) {
    var url = jsonObj.response_data.login.redazione_prefix_url + "/" + jsonObj.response_data.login.slug;
    if (jsonObj.new_subscription == 1) {
      url = url + '?welcome=1';
    }
    location.href = url;
  }
  else if (redirect == false || (redirect == true && jsonObj.response_data.login.redazione_prefix_url == false)) {
    init_login(data);
    if (typeof closeOverlay_follow == 'function') { 
      closeOverlay_follow();
    }
    click_for_share();
          /*if (typeof BlastingArrate !== "undefined") {
            for(i in BlastingArrate){
                BlastingArrate[i]._can_rate = true;
                if(BlastingArrate[i]._temp_rate != null){
                    BlastingArrate[i].rate();                    
                    i_do_rating = true;
                    break;
                }
            }

          }*/

    //funzione in blasting-follow.js
    /*$('#loggin-follow-modal').hide();
     $('body').removeClass('modal-aperta');
     $('#header').removeClass('modal-aperta-fixed');
     $('#breaking-news').removeClass('modal-aperta-fixed');
     $('#menu-mobile-trigger').css("opacity", "1");
     $('.follow').removeClass('touch');*/

    if (data.animation === 1) {
      //$('#logged-bottom').trigger('click');
      $('#logged-content').show();
      $('#follow-content').show();
    }
  }
}

function handleFacebookLoginResponse(response) {
  facebook_login_in_execution = false;

    if(response.status === 'not_authorized' && typeof sendUnauthorizedEvent !== 'undefined')
        sendUnauthorizedEvent();

  if (response.authResponse) {
    if (response.status === 'connected') {
    
      var access_token = response.authResponse.accessToken;
      var userID = response.authResponse.userID;
      var id_following = $("#id_following").val();
      var invitation = $("#follow-invitation").val();
      var rating_d = typeof getBlastingRateData !== "undefined" ? getBlastingRateData() : null;
      ///
      var param_type = false;
      if (typeof type_flow !== "undefined" && type_flow !== false) {
        param_type = type_flow;
        type_flow = false;
      }
      
      ///
      document.cookie = 'fb::token=' + access_token;
      var data_fb = {access_token: access_token, id_following: id_following, invitation: invitation, persistentSignin: true, typeFlow: param_type, verificationdebug: '__#blastingSocialJS',rating_data: JSON.stringify(rating_d), subscription_channel: subscription_channel};


      $.ajax({
        type: 'POST',
        url: '/app/facebook_login/',
        data: data_fb,
        dataType: "json",
        success: function (data) {
          if(typeof HideGenericLoader !== "undefined"){
            HideGenericLoader();
          }
          if ($(".pol-cookie-accept").length > 0) {
            /*to auto-accept cookie policy */
            $('.pol-cookie-accept').trigger('click');
          }

          var jsonObj = eval(data);
          if (jsonObj.status == "Ok") {
            if(typeof adblockManager !== 'undefined'){
              if(typeof jsonObj.fb_new_user !== 'undefined' && typeof jsonObj.fb_new_user !== 'undefined' ){
                ( 'ok' === jsonObj.fb_new_user ) ? adblockManager.callEventSignupFB() :  adblockManager.callEventLoginFB();
              }
            }
            finalStep(facebook_redirect, data);
            ga('send', 'event', facebook_success_ga[0], facebook_success_ga[1]);            
          } else if (jsonObj.status == "fb_error") {
            $("#follow-first").hide();
            $("#social-error-facebook-error").show();
          } else if (jsonObj.status == "no-email-given" && jsonObj.user_not_confirmed != 'true') {
            show_modal($(document), "NoEmail", jsonObj, null, null, function(){
              //una cosa brutta: bisogniamo di un refactor
              if(subscription_channel == 7 || subscription_channel == 11 || subscription_channel == 14) { //è già nel flusso del blaster distributore, ma visto che in realtà è facebook senza email allora assegno altro subscription channel
                $( "#form-register-follow" ).append( '<input type="hidden" id="subscription_channel" name="subscription_channel" value="'+(subscription_channel+1) +'" />' );
                if( $("#form-register-fb-moemail").length ){
                  $( "#form-register-fb-moemail" ).append( '<input type="hidden" id="subscription_channel" name="subscription_channel" value="'+(subscription_channel+1) +'" />' );
                }
              }

              if(typeof channel_login_facebook_callback!== 'undefined'){
                  channel_login_facebook_callback();
              }

            });
          } else if (jsonObj.status == "need-polling") {
            polling.params.url = '/app/chkRegProp/';
            polling.params.method = 'get';
            polling.params.data = {'ufi': jsonObj.ufi};
            polling.success = function (data) {
              //alert('polling andato a buon fine ' + JSON.stringify(data) + '. quindi chiamo nuovamente conferma iscrizione col parametro p per finire le operazioni e loggare');
              $.ajax({
                type: 'POST',
                url: '/app/facebook_login/',
                data: data_fb,
                dataType: "json",
                success: function (data) {
                  ga('send', 'event', facebook_success_ga[0], facebook_success_ga[1]);
                  var jsonObj = eval(data);
                  if (jsonObj.status == "Ok") {
                    if(typeof adblockManager !== 'undefined' && typeof jsonObj.fb_new_user !== 'undefined'){
                      ( 'ok' === jsonObj.fb_new_user ) ? adblockManager.callEventSignupFB() : adblockManager.callEventLoginFB();
                    }
                    finalStep(facebook_redirect, data);//gli passo il precedente oggetto
                    togglePleaseWait();
                  }
                }
              });
            };
            polling.doPolling();
          } else if (jsonObj.status == "duplicate-fb-user-id") {
            polling.startModalWaitPolling();
            polling.error();
            console.log("activationStatus: il tuo account è in fase di attivazione (senza polling)");//il tuo account è in fase di attivazione senza polling
          } else if (jsonObj.user_not_confirmed == 'true') {
            unconfirmed_fb_user = true;
            show_modal($(document), "NoEmail", jsonObj);
          }
        }
      });
    } else {
      if(typeof comeBackAlert !== 'undefined')
        comeBackAlert();
      togglePleaseWait();
    }
  } else { //chiude la finestra
    togglePleaseWait();
    if(typeof HideGenericLoader !== "undefined"){
      HideGenericLoader();
    }
    if(typeof comeBackAlert !== 'undefined')
        comeBackAlert();
  }
}

function FBBNLOGIN(redc, track_event) {
  if(typeof track_event === 'undefined') {
    track_event = false;
  }
  facebook_success_ga = track_event;  
  window.Blasting = window.Blasting || {};
  window.Blasting.facebookInitCallbacks = window.Blasting.facebookInitCallbacks || [];
  window.Blasting.facebookInitCallbacks.push(function() {
    if (facebook_login_in_execution === true) {
      return {};
    } else {
      facebook_login_in_execution = true;
    }

    if (typeof redc !== "undefined") {
      facebook_redirect = redc;
    }
    if (typeof isAmp !== "undefined" && isAmp()) {
      facebook_redirect = false;
    }

    if (facebook_redirect == true) {
      if(typeof ShowGenericLoader !== "undefined"){
        ShowGenericLoader();
      }
    }

    //if (navigator.userAgent.match('CriOS')) {
      //openFBLoginDialogManually();
    //} else {
      FB.login(handleFacebookLoginResponse, {scope: blfbsdk_config.config.scope});
    //}
  });
}

$(document).ready(function () {

  login_click = false;

  $("a#login-facebook").on("click", function (event) {
    event.stopPropagation();
    togglePleaseWait();
    FBBNLOGIN(true);
  });

});
//function signinCallback(authResult) {
//  if (login_click && authResult['access_token']) {
//    var code = authResult.code;
//    login_click = false;
//    var id_following = $("#id_following").val();
//    var invitation = $("#follow-invitation").val();
//
//    $.ajax({
//      type: 'POST',
//      url: '/app/google_login_follow/',
//      data: {
//        code: code, id_following: id_following, invitation: invitation, persistentSignin: true
//      },
//      dataType: "json",
//      beforeSend: function () {
//        togglePleaseWait();
//      },
//      success: function (data) {
//        var jsonObj = eval(data);
//        if (jsonObj.status == "Ok") {
//          init_login(data);
//          closeOverlay_follow();
//          click_for_share();
//          /*
//           var sh = $('share-news-to').val();
//           $('.share .'+sh).click();*/
//          //funzione in blasting-follow.js
//          /*$('#loggin-follow-modal').hide();
//           $('body').removeClass('modal-aperta');
//           $('#header').removeClass('modal-aperta-fixed');
//           $('#breaking-news').removeClass('modal-aperta-fixed');
//           $('#menu-mobile-trigger').css("opacity", "1");
//           $('.follow').removeClass('touch');*/
//
//          if (data.animation === 1) {
//            //$('#logged-bottom').trigger('click');
//            $('#logged-content').show();
//            $('#follow-content').show();
//          }
//        } else if (jsonObj.status == "google_error") {
//          $("#follow-first").hide();
//          $("#social-error-google-error").show();
//        }
//      }
//    });
//  }
//}

//function render() {
//  gapi.signin.render('login-google-plus-follow', {
//    'callback': 'signinCallback',
//    'clientid': '626303734396-pdvk8jrdktbh9j732pc669aqivq8q0se.apps.googleusercontent.com',
//    'cookiepolicy': 'single_host_origin',
//    'requestvisibleactions': 'http://schemas.google.com/AddActivity',
//    'scope': 'https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/userinfo.email https://www.googleapis.com/auth/plus.login'
//  });
//}

function togglePleaseWait() {
  var loader = $("#register-follow-loader");

  if (loader.is(':visible')) {
    $(".register-follow").show();
    loader.hide();
  } else {
    $(".register-follow").hide();
    loader.show();
  }
}